{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Grimwald Knowledge Base Welcome to the Grimwald Knowledge Base, the central hub for all information related to the Grimwald SMP. This documentation serves as a comprehensive guide for players, staff, and administrators, covering everything from server rules and moderation policies to technical maintenance, branding guidelines, and community engagement. Our goal is to ensure that anyone involved in Grimwald\u2014whether a new player, a seasoned veteran, or a staff member\u2014can quickly find the information they need to navigate, enjoy or contribute to the server. Purpose of these Docs The Grimwald Knowledge Base is designed to: Provide clear, structured guidance on server rules, community standards, and staff responsibilities. Offer detailed technical documentation for server maintenance, plugin management, website updates, and other administrative tasks. Maintain a record of past decisions, policies, and updates, ensuring that new admins... Act as a living document, regularly updated by staff and community members to reflect the latest developments in Grimwald SMP. Keeping the Docs updated To keep this knowledge base reliable and useful, we encourage all staff members to: Regularly review and update information as the server evolves. Ensure that any major changes\u2014whether related to game mechanics, server rules, or community policies\u2014are discussed and agreed upon by staff and (where applicable) players before being applied to the server. Clearly document updates in the changelogs, to maintain consistency and clarity. Use a standardized format for all entries to keep information easy to navigate and understand. This documentation is a community effort, and we appreciate everyone\u2019s help in keeping it a valuable resource for Grimwald SMP! That being said we don't want everyone to be able to have full control over changing this document whenever they feel like it. Admins will have edit access via the Github Repository, If you are not an admin you will have to fork the repository and create a pull request for an admin to review and then accept/reject your changes.","title":"Home"},{"location":"#grimwald-knowledge-base","text":"Welcome to the Grimwald Knowledge Base, the central hub for all information related to the Grimwald SMP. This documentation serves as a comprehensive guide for players, staff, and administrators, covering everything from server rules and moderation policies to technical maintenance, branding guidelines, and community engagement. Our goal is to ensure that anyone involved in Grimwald\u2014whether a new player, a seasoned veteran, or a staff member\u2014can quickly find the information they need to navigate, enjoy or contribute to the server.","title":"Grimwald Knowledge Base"},{"location":"#purpose-of-these-docs","text":"The Grimwald Knowledge Base is designed to: Provide clear, structured guidance on server rules, community standards, and staff responsibilities. Offer detailed technical documentation for server maintenance, plugin management, website updates, and other administrative tasks. Maintain a record of past decisions, policies, and updates, ensuring that new admins... Act as a living document, regularly updated by staff and community members to reflect the latest developments in Grimwald SMP.","title":"Purpose of these Docs"},{"location":"#keeping-the-docs-updated","text":"To keep this knowledge base reliable and useful, we encourage all staff members to: Regularly review and update information as the server evolves. Ensure that any major changes\u2014whether related to game mechanics, server rules, or community policies\u2014are discussed and agreed upon by staff and (where applicable) players before being applied to the server. Clearly document updates in the changelogs, to maintain consistency and clarity. Use a standardized format for all entries to keep information easy to navigate and understand. This documentation is a community effort, and we appreciate everyone\u2019s help in keeping it a valuable resource for Grimwald SMP! That being said we don't want everyone to be able to have full control over changing this document whenever they feel like it. Admins will have edit access via the Github Repository, If you are not an admin you will have to fork the repository and create a pull request for an admin to review and then accept/reject your changes.","title":"Keeping the Docs updated"},{"location":"Admin_Guide/","text":"TODO Apply Standards and make sure file name is consistent with nav Admin Guide This document aims to provide usage for all of our commands as well as guidelines on how to use them. Some of the guidelines might seem to state the obvious but most are based on past experience so it was designed to be as specific as possible Commands Basic commands ban <Username> - Used to ban a player. /kick <Username> - Used to kick a player from the server (they will be able to join back instantly after). /tp <your Username> <destination or Username to tp to> - Teleports you to a specific player or location. /restart - Restarts the server (no progress lost) use this if the server is really laggy, ensure it is not just you who is laggy. /tps - Gets the ticks per second, this is a good measure of server performance, 20tps is what it should be at anything under means it is underperforming, consider restarting if it is under 15tps, If it does not help hardware upgrades may be needed. Coreprotect /co i - Toggles Inspector mode, allowing you to left/right click (They show different info based on which button you click, E.g. interactions vs transactions on containers) to view the logs of any block or container, including a timestamp and which user performed the action, useful for catching griefers or thiefs. /co l <page number> - Allows you to view other pages of the most recently viewed log in inspector mode. /co rollback <radius> <time> Allows you to rollback an area to a time before it was griefed or stolen from, use the timestamp from the logs to help you know how far to rollback. There are other parameters for this command that can filter down what to rollback even further but these are usually not needed (Some things may break when rolled back E.g. redstone machines, especially those with moving components such as flying machines) Other Parameters for rollback (Append these to the command above if needed, which usually they won't be): <username> Only rollback actions performed by a specific user. <include items> - Include specific items or blocks in the rollback, by default everything within the radius is rolled back. <exclude items> - Exclude specific items or blocks in the rollback. <action> - Choose specific actions to rollback. Open inv These commands work with offline players. /oi <player name> - Opens a player's inventory, useful for finding stolen items or identifying xray users or people who have used dupe cheats. /oe <player name> - Opens a player's end chest, another place to check for illegal items. Vanish /vanish - Toggles vanish, sends a message to show you have logged out, hides your name from the list of online players and makes you invisible, useful for catching players cheating can be paired with spectator mode for better movement. Datapack commands NEVER USE /reload - This command may seem useful as it can enable datapacks on the fly without a full restart but breaks many plugins Instead use /datapack list to retrieve a list of all datapacks, enabled or not then use /datapack enable <datapack file name> Guidelines Responsibilities This is a volunteer role and we understand people can be busy that being said, when you are available you should be able to do the following as required: Help out players when they need it. Punish players who are breaking the rules. Engage in admin discussions. (Voice chat is not required) Welcome new players, guide them to the rules and server info and whitelist them. Ban bots or hacked accounts in chat. Post announcements or polls when needed. There are other specialised roles that certain admins will handle such as advertising. Punishments for breaking rules Punishment for breaking rules are up to you as an admin, however it might be good to discuss with other admins first, depending on the rule that was broken you may want to issue a preliminary ban whilst you discuss. Always ensure someone has actually broken the rules before issuing a punishment. Only ban people for breaking the rules, not just because they have done something you do not like. Basically just try to remain unbiased when giving out punishments. If someone joins and instantly breaks rules it is their own fault for not reading them and in most cases this will be a permanent ban but depending on severity could be a warning if it is something minor. If a trusted member breaks the rules you may wish to consult other admins first, But their trusted status should not let them away with breaking the rules so some form of punishment should be given. 0 Tolerance against hate speech, harrasment and bullying, If anyone is being racist, homophobic, transphobic, xenophobic, etc, harrasing or bullying other players, they should be permanently banned. Using commands for personal gain or aiding players by cheating Commands should not be used for person gain or to cheat for other players. This includes, teleporting yourself or others, using open inventory to transfer items between players or stealing from people using this, reading personal content E.g. a book and quill inside their inventory, etc. Do not use your status as admin or your ability to perform commands as a way to exploit other people. There are however a few rare cases where they may be exceptions to a few of these. Exceptions The End Fight Event or similar, during this event you may teleport latecomers to the stronghold in order to start the event on time. You may give players items back from creative or xp via commands if and only if they die to a bug. (If using a graves feature, the grave must also have not spawned or be somewhere inaccessible due to the bug). You can transfer items between players using openinv only for the purposes of returning stolen items. Coreprotect Screenshot logs as evidence to prevent to the admin team, useful in discussions of punishments and in case somebody tries to dispute their ban and claim you falsely accused them. Do not give players access to the inspect command, many people think they should have this but it leads to players taking matters into their own hands which usually ends up worse. Only rollback when necessary. Rollback should be for griefing only, not for creeper explosions. Prevent duped items when rolling back, if you are rolling back an area with items in containers ensure players are not getting duplicate items, this can occur if a player gets griefed, takes out items from a chest after the grief and then the chest gets rolled back, now the player has the items they took back and the rolled back ones in the container. The same goes for blocks, if blocks get blown up they may drop, when rolling back the blocks are replaced but the player may have picked up the dropped blocks. Open Inv Do not use this to transfer items between players, read personal content such as book and quill or steal items, Do not move players items in their inventory to mess with them. In most cases you should not need to take items out of a players inventory, however unless you have a shulker preview mod such as shulkerbox tooltip, you will need to place shulkers to check contents. If you can get the mod use this instead, if you do have to place them make sure to do this whilst the player is offline and put the shulkers back in the same spot afterwards. Screenshot inventories or enderchests as proof of duping or stealing or xray, it can be hard to prove these but by looking at play time to see if the quantity of a certain item obtained is realistic and combining other techiniques such as spectator mode to find xray tunnels and inspector to check who dug those tunnels or who took from a chest. Do not use this to plant evidence on players. Vanish Vanish should only be used when you have reason to believe someone is cheating. Do not spy on people for no reason. It should not be used to eavesdrop on players using proximity chat. Do not play in vanish mode to avoid responsibilities. E.g. Players needing your help. Remember Everything you do is logged, If you abuse admin we will be able to find out. As an admin it is your job to maintain integrity and only use the commands for the purposes they were intended, If you abuse it, you lose it as simple as that. As an admin you are still subject to the normal rules of the server, As well as these additional guidelines. If you break the rules as an admin at the very least you will be removed from the admin team, but you may also face standard punishments that can be applied to all players.","title":"TODO Apply Standards and make sure file name is consistent with nav"},{"location":"Admin_Guide/#todo-apply-standards-and-make-sure-file-name-is-consistent-with-nav","text":"","title":"TODO Apply Standards and make sure file name is consistent with nav"},{"location":"Admin_Guide/#admin-guide","text":"This document aims to provide usage for all of our commands as well as guidelines on how to use them. Some of the guidelines might seem to state the obvious but most are based on past experience so it was designed to be as specific as possible","title":"Admin Guide"},{"location":"Admin_Guide/#commands","text":"","title":"Commands"},{"location":"Admin_Guide/#basic-commands","text":"ban <Username> - Used to ban a player. /kick <Username> - Used to kick a player from the server (they will be able to join back instantly after). /tp <your Username> <destination or Username to tp to> - Teleports you to a specific player or location. /restart - Restarts the server (no progress lost) use this if the server is really laggy, ensure it is not just you who is laggy. /tps - Gets the ticks per second, this is a good measure of server performance, 20tps is what it should be at anything under means it is underperforming, consider restarting if it is under 15tps, If it does not help hardware upgrades may be needed.","title":"Basic commands"},{"location":"Admin_Guide/#coreprotect","text":"/co i - Toggles Inspector mode, allowing you to left/right click (They show different info based on which button you click, E.g. interactions vs transactions on containers) to view the logs of any block or container, including a timestamp and which user performed the action, useful for catching griefers or thiefs. /co l <page number> - Allows you to view other pages of the most recently viewed log in inspector mode. /co rollback <radius> <time> Allows you to rollback an area to a time before it was griefed or stolen from, use the timestamp from the logs to help you know how far to rollback. There are other parameters for this command that can filter down what to rollback even further but these are usually not needed (Some things may break when rolled back E.g. redstone machines, especially those with moving components such as flying machines) Other Parameters for rollback (Append these to the command above if needed, which usually they won't be): <username> Only rollback actions performed by a specific user. <include items> - Include specific items or blocks in the rollback, by default everything within the radius is rolled back. <exclude items> - Exclude specific items or blocks in the rollback. <action> - Choose specific actions to rollback.","title":"Coreprotect"},{"location":"Admin_Guide/#open-inv","text":"These commands work with offline players. /oi <player name> - Opens a player's inventory, useful for finding stolen items or identifying xray users or people who have used dupe cheats. /oe <player name> - Opens a player's end chest, another place to check for illegal items.","title":"Open inv"},{"location":"Admin_Guide/#vanish","text":"/vanish - Toggles vanish, sends a message to show you have logged out, hides your name from the list of online players and makes you invisible, useful for catching players cheating can be paired with spectator mode for better movement.","title":"Vanish"},{"location":"Admin_Guide/#datapack-commands","text":"NEVER USE /reload - This command may seem useful as it can enable datapacks on the fly without a full restart but breaks many plugins Instead use /datapack list to retrieve a list of all datapacks, enabled or not then use /datapack enable <datapack file name>","title":"Datapack commands"},{"location":"Admin_Guide/#guidelines","text":"","title":"Guidelines"},{"location":"Admin_Guide/#responsibilities","text":"This is a volunteer role and we understand people can be busy that being said, when you are available you should be able to do the following as required: Help out players when they need it. Punish players who are breaking the rules. Engage in admin discussions. (Voice chat is not required) Welcome new players, guide them to the rules and server info and whitelist them. Ban bots or hacked accounts in chat. Post announcements or polls when needed. There are other specialised roles that certain admins will handle such as advertising.","title":"Responsibilities"},{"location":"Admin_Guide/#punishments-for-breaking-rules","text":"Punishment for breaking rules are up to you as an admin, however it might be good to discuss with other admins first, depending on the rule that was broken you may want to issue a preliminary ban whilst you discuss. Always ensure someone has actually broken the rules before issuing a punishment. Only ban people for breaking the rules, not just because they have done something you do not like. Basically just try to remain unbiased when giving out punishments. If someone joins and instantly breaks rules it is their own fault for not reading them and in most cases this will be a permanent ban but depending on severity could be a warning if it is something minor. If a trusted member breaks the rules you may wish to consult other admins first, But their trusted status should not let them away with breaking the rules so some form of punishment should be given. 0 Tolerance against hate speech, harrasment and bullying, If anyone is being racist, homophobic, transphobic, xenophobic, etc, harrasing or bullying other players, they should be permanently banned.","title":"Punishments for breaking rules"},{"location":"Admin_Guide/#using-commands-for-personal-gain-or-aiding-players-by-cheating","text":"Commands should not be used for person gain or to cheat for other players. This includes, teleporting yourself or others, using open inventory to transfer items between players or stealing from people using this, reading personal content E.g. a book and quill inside their inventory, etc. Do not use your status as admin or your ability to perform commands as a way to exploit other people. There are however a few rare cases where they may be exceptions to a few of these.","title":"Using commands for personal gain or aiding players by cheating"},{"location":"Admin_Guide/#exceptions","text":"The End Fight Event or similar, during this event you may teleport latecomers to the stronghold in order to start the event on time. You may give players items back from creative or xp via commands if and only if they die to a bug. (If using a graves feature, the grave must also have not spawned or be somewhere inaccessible due to the bug). You can transfer items between players using openinv only for the purposes of returning stolen items.","title":"Exceptions"},{"location":"Admin_Guide/#coreprotect_1","text":"Screenshot logs as evidence to prevent to the admin team, useful in discussions of punishments and in case somebody tries to dispute their ban and claim you falsely accused them. Do not give players access to the inspect command, many people think they should have this but it leads to players taking matters into their own hands which usually ends up worse. Only rollback when necessary. Rollback should be for griefing only, not for creeper explosions. Prevent duped items when rolling back, if you are rolling back an area with items in containers ensure players are not getting duplicate items, this can occur if a player gets griefed, takes out items from a chest after the grief and then the chest gets rolled back, now the player has the items they took back and the rolled back ones in the container. The same goes for blocks, if blocks get blown up they may drop, when rolling back the blocks are replaced but the player may have picked up the dropped blocks.","title":"Coreprotect"},{"location":"Admin_Guide/#open-inv_1","text":"Do not use this to transfer items between players, read personal content such as book and quill or steal items, Do not move players items in their inventory to mess with them. In most cases you should not need to take items out of a players inventory, however unless you have a shulker preview mod such as shulkerbox tooltip, you will need to place shulkers to check contents. If you can get the mod use this instead, if you do have to place them make sure to do this whilst the player is offline and put the shulkers back in the same spot afterwards. Screenshot inventories or enderchests as proof of duping or stealing or xray, it can be hard to prove these but by looking at play time to see if the quantity of a certain item obtained is realistic and combining other techiniques such as spectator mode to find xray tunnels and inspector to check who dug those tunnels or who took from a chest. Do not use this to plant evidence on players.","title":"Open Inv"},{"location":"Admin_Guide/#vanish_1","text":"Vanish should only be used when you have reason to believe someone is cheating. Do not spy on people for no reason. It should not be used to eavesdrop on players using proximity chat. Do not play in vanish mode to avoid responsibilities. E.g. Players needing your help.","title":"Vanish"},{"location":"Admin_Guide/#remember","text":"Everything you do is logged, If you abuse admin we will be able to find out. As an admin it is your job to maintain integrity and only use the commands for the purposes they were intended, If you abuse it, you lose it as simple as that. As an admin you are still subject to the normal rules of the server, As well as these additional guidelines. If you break the rules as an admin at the very least you will be removed from the admin team, but you may also face standard punishments that can be applied to all players.","title":"Remember"},{"location":"Advertising/","text":"Advertising Guide This document aims to provide a guide for advertising the server in order to get new members. Posting Ads Where to advertise We usually advertise to reddit in the following communities: r/MinecraftBuddies (Java-Hosting Flair) r/mcservers (SMP Flair) r/MinecraftServer (Advertising Flair) However you can advertise wherever you want. Reddit advertisement templates For the title Grimwald SMP [SMP]{java}{1.21}{Semi-Vanilla}{16+}{whitelist}{discord} Replace 1.21 with the current version the server is running Semi-Vanilla can be replaced with Modded for modded seasons. Age limit can be replaced in the event the age limit changes r/mcservers strictly enforces this title naming convention, but feel free to be more creative on other subreddits. For the body About us we are a small mainly vanilla server with some quality of life datapacks from vanilla tweaks and plugins to protect the server from hackers and griefers. Anyone is welcome as long as you follow the rules Features - Proximity voicechat, this is optional but it's there if you want to use it - Vanilla tweaks datapacks for quality of life - Coreprotect instead of land claim to protect the server against theft and griefing (This allows us to revert the world to previous states and ban those responsible) - Hard difficulty - Democracy, all major server decisions are voted on by the players - Updates to new versions soon after they come out - Vanilla like configs, TNT, rail and carpet duping is allowed, bedrock breaking works etc. - Friendly community - Minigames and events - Group projects - No pay to win or voting to access stuff Apply here: https://forms.gle/uKNZd6JzVjRjQK5H9 You may need to changed details depending on the season. Feel free to change the description or expand on it. Some subreddits (Just r/MinecraftBuddies out of the ones listed above) don't allow links, If this is the case replace the link with one of the following: `Not allowed to post links here, check my other recent posts for the application link' (Assuming you have posted to other subreddits beforehand) 'Not allowed to post links here, check my bio for the application link' (Assuming you have the link in your bio)","title":"Advertising Guide"},{"location":"Advertising/#advertising-guide","text":"This document aims to provide a guide for advertising the server in order to get new members.","title":"Advertising Guide"},{"location":"Advertising/#posting-ads","text":"","title":"Posting Ads"},{"location":"Advertising/#where-to-advertise","text":"We usually advertise to reddit in the following communities: r/MinecraftBuddies (Java-Hosting Flair) r/mcservers (SMP Flair) r/MinecraftServer (Advertising Flair) However you can advertise wherever you want.","title":"Where to advertise"},{"location":"Advertising/#reddit-advertisement-templates","text":"For the title Grimwald SMP [SMP]{java}{1.21}{Semi-Vanilla}{16+}{whitelist}{discord} Replace 1.21 with the current version the server is running Semi-Vanilla can be replaced with Modded for modded seasons. Age limit can be replaced in the event the age limit changes r/mcservers strictly enforces this title naming convention, but feel free to be more creative on other subreddits. For the body About us we are a small mainly vanilla server with some quality of life datapacks from vanilla tweaks and plugins to protect the server from hackers and griefers. Anyone is welcome as long as you follow the rules Features - Proximity voicechat, this is optional but it's there if you want to use it - Vanilla tweaks datapacks for quality of life - Coreprotect instead of land claim to protect the server against theft and griefing (This allows us to revert the world to previous states and ban those responsible) - Hard difficulty - Democracy, all major server decisions are voted on by the players - Updates to new versions soon after they come out - Vanilla like configs, TNT, rail and carpet duping is allowed, bedrock breaking works etc. - Friendly community - Minigames and events - Group projects - No pay to win or voting to access stuff Apply here: https://forms.gle/uKNZd6JzVjRjQK5H9 You may need to changed details depending on the season. Feel free to change the description or expand on it. Some subreddits (Just r/MinecraftBuddies out of the ones listed above) don't allow links, If this is the case replace the link with one of the following: `Not allowed to post links here, check my other recent posts for the application link' (Assuming you have posted to other subreddits beforehand) 'Not allowed to post links here, check my bio for the application link' (Assuming you have the link in your bio)","title":"Reddit advertisement templates"},{"location":"Rules/","text":"TODO Apply Standards Rules This document aims to provide a list of all our rules Chat Rules Be respectful to everyone, this includes not insulting each other, starting or participating in arguments etc... Do not discriminate, this means no racism, homophobia, transphobia, xenophobia etc. Keep messages to the appropriate channels, Read channel descriptions to find out what that channel is for. Don't ask for mod, if we need mods we'll post an application. (Only members with trusted rank or higher may apply for admin positions) Do not ping everyone, unless you are an admin and are making an announcement or have permission from an admin. Do not spam. Memes are allowed in general. Admins/Staff have the final say If you are unsure of something or need help, ask an admin. Game Rules You must be 16+ (Subject to change as the average age of our community changes) No Griefing. No Stealing. No hacking or cheating. (Includes no xray, fly hacks etc) No PVP without permission. No Lag Machines/ Update Supressors. There is no land claim so ask permission to build near other players as they might have plans to expand. AFK Farms are allowed. (You may be kicked whilst AFKing due to server restart or if your farm is causing too much lag) Make your farms have a clear labelled on/off switch and ensure sufficient overflow protection to prevent likelihood of you getting kicked if your farm is lagging the server. Using alt accounts to AFK is allowed. Bedrock breaking is allowed. You are allowed to use vanilla duping methods for: rails, carpet, string, TNT and all falling blocks (Except the dragon egg) be aware not all dupes will always work due to game version/server software. You are allowed to use clients and client side mods that do not give an unfair advantage. This includes clients such as Lunar, Badlion, Feather etc as well as the following types of mods: Tooltip mods, visuals mods, utility mods, map mods etc, if you are unsure if you are allowed to use a certain type of mod ask an admin.","title":"TODO Apply Standards"},{"location":"Rules/#todo-apply-standards","text":"","title":"TODO Apply Standards"},{"location":"Rules/#rules","text":"This document aims to provide a list of all our rules","title":"Rules"},{"location":"Rules/#chat-rules","text":"Be respectful to everyone, this includes not insulting each other, starting or participating in arguments etc... Do not discriminate, this means no racism, homophobia, transphobia, xenophobia etc. Keep messages to the appropriate channels, Read channel descriptions to find out what that channel is for. Don't ask for mod, if we need mods we'll post an application. (Only members with trusted rank or higher may apply for admin positions) Do not ping everyone, unless you are an admin and are making an announcement or have permission from an admin. Do not spam. Memes are allowed in general. Admins/Staff have the final say If you are unsure of something or need help, ask an admin.","title":"Chat Rules"},{"location":"Rules/#game-rules","text":"You must be 16+ (Subject to change as the average age of our community changes) No Griefing. No Stealing. No hacking or cheating. (Includes no xray, fly hacks etc) No PVP without permission. No Lag Machines/ Update Supressors. There is no land claim so ask permission to build near other players as they might have plans to expand. AFK Farms are allowed. (You may be kicked whilst AFKing due to server restart or if your farm is causing too much lag) Make your farms have a clear labelled on/off switch and ensure sufficient overflow protection to prevent likelihood of you getting kicked if your farm is lagging the server. Using alt accounts to AFK is allowed. Bedrock breaking is allowed. You are allowed to use vanilla duping methods for: rails, carpet, string, TNT and all falling blocks (Except the dragon egg) be aware not all dupes will always work due to game version/server software. You are allowed to use clients and client side mods that do not give an unfair advantage. This includes clients such as Lunar, Badlion, Feather etc as well as the following types of mods: Tooltip mods, visuals mods, utility mods, map mods etc, if you are unsure if you are allowed to use a certain type of mod ask an admin.","title":"Game Rules"},{"location":"Stats/","text":"TODO Apply Standards and make sure file name is consistent with nav Stats This documents aims to provide a guide for extracting formatting and updating the stats for the website. Tracking The Stats We use 2 vanilla tweaks datapacks to track the stats, they can be found here https://vanillatweaks.net/picker/datapacks/ These are Track Statistics and Track Raw Statistics, they should be installed as soon as a season starts. In the event these datapacks are not updated to the version the server is running on, use the latest version as long as there has been no technical changes that break the datapacks they should work but may be missing new stats due to the next version, once the packs release for this version you can safely update without losing any stats, new stats will start tracking from then. In the event that the server is running an older version, try to get the correct version from vanilla tweaks. Technically there are other ways to access players stats without these packs but our formatter is based around this so using other methods requires a lot of manual work or programming a new formatter so try to use these packs where possible. Extracting The Stats From The Server And Formatting Them Extracting stats Download scoreboard.dat from the data folder on the server Download Python if you do not already have it installed. https://www.python.org/downloads/ Download the stat formatter. https://github.com/JadenLabs/grimwald-stat-prep Download and Install NBTExplorer. https://github.com/jaquadro/NBTExplorer/ Open CMD in administrator mode inside of the NBTExplorer directory Enter the following command, replace PATH with the path to wherever you downloaded scoreboard.dat to: nbtutil --path \"PATH\\scoreboard.dat\\data\\PlayerScores\" --printtree --json \"main.json\" You should now have a main.json within your NBTExplorer Directory, move this file to the MainStats directory from the stat formatter. Using the formatter Open main.py and edit aliases if needed (If any players have switched names or accounts) the format for this is as follows [\"NewName\", [\"OldName1\", \"OldName2\", \"OldName3\"]] or more commonly [\"NewName\", [\"OldName\"]] for players who have only had one name change include all the names that players have used throughout the season, There is no need to list players who have not changed their name. You are now ready to run Main.py, when prompted choose to run the whole program and output for website. You can find the outputted files in the output folder. Manual formatting steps WARNING: Currently this program does not format everything, there are some additional steps before you can add it to the website. (Note: This process may be automated in the future.) Note that all converted values should be rounded to 2 decimal places. Go through each file and remove all rows that contain score: 0. Go through each file and remove banned players. Convert playtime minutes into hours. Convert distances from cm into m, You can check which stats are they are indicated by (Blocks) on the stats page (1m = 1 block) Add the 2 different diamond stats together, there are 2 diamonds mined stats one for regular diamonds and one for deepslate diamonds. On the website we just display a total diamonds mined, these stats need manually combined, it is easier to modify the deepslate version as most people don't mine much regular diamond ore. Ensure once you have combined each persons stat that they are still in the correct position based on their score, you may have to move them up/down in the file to maintain the correct order. (Order is determined by position in the json, higher scores should be at the top.) Adding The Stats To The Website Open the stats directory in public/stats Open the stats.html file amd change the season number to the season you are updating the stats for on both the title element and the h1 element. Open the stats.js file, in const scoreboardData there are multiple sections with different names that match the files generated from the formatter. (Which should now have had the manual formatting applied too, Note: The name of the diamond stat in this file is slightly altered to reflect the 2 diamond stats being combined) You will have to manually open the each new stats file and paste it into the correct section of this file replacing the old data. (This process could be automated in the future, generating the entire js file for you) Once this is done go to app/components/Navbar.js and change the season number for the stats button text.","title":"TODO Apply Standards and make sure file name is consistent with nav"},{"location":"Stats/#todo-apply-standards-and-make-sure-file-name-is-consistent-with-nav","text":"","title":"TODO Apply Standards and make sure file name is consistent with nav"},{"location":"Stats/#stats","text":"This documents aims to provide a guide for extracting formatting and updating the stats for the website.","title":"Stats"},{"location":"Stats/#tracking-the-stats","text":"We use 2 vanilla tweaks datapacks to track the stats, they can be found here https://vanillatweaks.net/picker/datapacks/ These are Track Statistics and Track Raw Statistics, they should be installed as soon as a season starts. In the event these datapacks are not updated to the version the server is running on, use the latest version as long as there has been no technical changes that break the datapacks they should work but may be missing new stats due to the next version, once the packs release for this version you can safely update without losing any stats, new stats will start tracking from then. In the event that the server is running an older version, try to get the correct version from vanilla tweaks. Technically there are other ways to access players stats without these packs but our formatter is based around this so using other methods requires a lot of manual work or programming a new formatter so try to use these packs where possible.","title":"Tracking The Stats"},{"location":"Stats/#extracting-the-stats-from-the-server-and-formatting-them","text":"","title":"Extracting The Stats From The Server And Formatting Them"},{"location":"Stats/#extracting-stats","text":"Download scoreboard.dat from the data folder on the server Download Python if you do not already have it installed. https://www.python.org/downloads/ Download the stat formatter. https://github.com/JadenLabs/grimwald-stat-prep Download and Install NBTExplorer. https://github.com/jaquadro/NBTExplorer/ Open CMD in administrator mode inside of the NBTExplorer directory Enter the following command, replace PATH with the path to wherever you downloaded scoreboard.dat to: nbtutil --path \"PATH\\scoreboard.dat\\data\\PlayerScores\" --printtree --json \"main.json\" You should now have a main.json within your NBTExplorer Directory, move this file to the MainStats directory from the stat formatter.","title":"Extracting stats"},{"location":"Stats/#using-the-formatter","text":"Open main.py and edit aliases if needed (If any players have switched names or accounts) the format for this is as follows [\"NewName\", [\"OldName1\", \"OldName2\", \"OldName3\"]] or more commonly [\"NewName\", [\"OldName\"]] for players who have only had one name change include all the names that players have used throughout the season, There is no need to list players who have not changed their name. You are now ready to run Main.py, when prompted choose to run the whole program and output for website. You can find the outputted files in the output folder.","title":"Using the formatter"},{"location":"Stats/#manual-formatting-steps","text":"WARNING: Currently this program does not format everything, there are some additional steps before you can add it to the website. (Note: This process may be automated in the future.) Note that all converted values should be rounded to 2 decimal places. Go through each file and remove all rows that contain score: 0. Go through each file and remove banned players. Convert playtime minutes into hours. Convert distances from cm into m, You can check which stats are they are indicated by (Blocks) on the stats page (1m = 1 block) Add the 2 different diamond stats together, there are 2 diamonds mined stats one for regular diamonds and one for deepslate diamonds. On the website we just display a total diamonds mined, these stats need manually combined, it is easier to modify the deepslate version as most people don't mine much regular diamond ore. Ensure once you have combined each persons stat that they are still in the correct position based on their score, you may have to move them up/down in the file to maintain the correct order. (Order is determined by position in the json, higher scores should be at the top.)","title":"Manual formatting steps"},{"location":"Stats/#adding-the-stats-to-the-website","text":"Open the stats directory in public/stats Open the stats.html file amd change the season number to the season you are updating the stats for on both the title element and the h1 element. Open the stats.js file, in const scoreboardData there are multiple sections with different names that match the files generated from the formatter. (Which should now have had the manual formatting applied too, Note: The name of the diamond stat in this file is slightly altered to reflect the 2 diamond stats being combined) You will have to manually open the each new stats file and paste it into the correct section of this file replacing the old data. (This process could be automated in the future, generating the entire js file for you) Once this is done go to app/components/Navbar.js and change the season number for the stats button text.","title":"Adding The Stats To The Website"},{"location":"Website/","text":"TODO Apply Standards and make sure file name is consistent with nav Website Guide This documents aims to provide a guide for updating an maintaining the website. Website Link https://grimwald.vercel.app New Seasons Updating the main site for a new season Here are the steps for updating the website for the new season. First go to app/page.tsx, You will see something similar to the following code <> <Navbar /> <Hero /> <div className=\"parallax\"></div> <h2 id=\"subtitle\">Season 21</h2> <Timer startText=\"Season Started: 8th of February 2025\" startTimestamp={1739031120} /> <h2 id=\"subtitle\">Server Lifetime</h2> <Timer startText=\"Server Started: 14th of September 2020\" startTimestamp={1600095600} /> </> Change the season number on the subtitle. Change the date the season started on the line below, Keep it in the same format, Then put the date and time (Which can both be found from the season start announcement) that the season started into a unix timestamp converter (Such as this https://www.unixtimestamp.com ), Put the number it generates into the start timestamp field. Do not touch the bottom 2 lines these are for the server start date which will never change. Next you need to update the map link. Go to app/components/Navbar.js, Find the line like this: <NavButton href=\"http://127.0.0.1:1234/\" text=\"Map\" /> Change the url to the current map url. This will be the servers IP + the map webservers port, (Found in the additional ports section or in the map config) The Timeline Media guidelines All images should be 1920x1080 resolution. With no shaders or resource packs applied. You can link to videos relating to the server, resource packs or shaders are allowed. You can also link to modlists for modded seasons. Modlists are generated by curseforge when you export a profile you will have to add this file to the public/modlists folder and name it correctly. Creating a new season To add a new season to the timeline first go to app/components/seasons . Duplicate the most recent season file, changing the name of the duplicated file to reflect the season you are adding. E.g. season20 -> duplicate, rename -> season21 Firstly there are 3 values to update in this new file: export default function Season20() { return ( <div className=\"parallaxS20\"> <div id=\"S20\"></div> Change the function season number to reflect the season you are adding. (Season20 -> Season21) Do the same for the parallax class. (parallaxS20 -> parallaxS21) Finally do the same for the id. (S20 -> S21) Setting up the background Now we need to set up the background image and styles to make the new timeline section look right: Go to app/globals.css . Go to the very bottom of the file and then scroll up a bit until you see the comment / Parallax stuff / You will see something like the following: .parallaxS1, .parallaxS2, .parallaxS3, .parallaxS4, .parallaxS5, .parallaxS6, .parallaxS7, .parallaxS8, .parallaxS9, .parallaxS10, .parallaxS11, .parallaxS12, .parallaxS13, .parallaxS14, .parallaxS15, .parallaxS16, .parallaxS17, .parallaxS18, .parallaxS19, .parallaxS20 { Add the parallax class of the season you are adding to this list by adding a comma after the most recent season but before the { and then writing the parallax class name. Scroll down a bit until you see a similar list and do the same thing. Finally scroll right to the bottom and copy the last 3 lines then paste them under. They should look like the following .parallaxS20 { background-image: url(\"/S20Background.png\"); } Once again change the class name to be that of the new season you are adding. Also change the name of the background-image url to reflect the new season you are adding. Now go into public/ and place the image you want to use for a background in here, It should be named S<season number>Background.png otherwise it will not work Now your background should work. Add the new section To see everything is working we need to add this timeline section to the timeline page go to app/pages/timeline/page.tsx Copy and paste an import season line updating the season number in both positions for the new season you are adding. They look like this import Season20 from \"@/app/components/seasons/season20\"; Then do the same with the element. They look like this <Season20 /> Now your timeline is visible but will show the same content as the previous one with a new background. updating the content and general guidelines Go back to the app/components/seasons directory and open your new seasons file. Here is a view of each timeline entry you can duplicate these or remove them to add/remove more entries. <Timeline side=\"left\" date=\"23rd October 2024\" title=\"Season 20 Begins\" description=\"Continuing our tradition of having a modded season every 4 seasons, We start season 20 with a custom modpack unfortunately we had to play on an older version due to some of the mods we were interested in not being up to date. (Mods: See list below)\" imgSrc=\"\" // If no img, pass an empty string or undefined iframeSrc=\"/modlists/S20Mods.html\" // If no iframe, pass an empty string or undefined /> side determines which side of the timeline the entry appears on, this should always be alternating meaning when you duplicate the file you will have to invert all left/right values. date, displays the date of an event, keep it in the same format, If date is completely unknown you can leave it blank, if you know the rough time you can write something like 'Early January 2025' or 'Some point during January 2025'. title, the title of the event, Should never be left blank description, a brief description of the event. Should never be left blank, Remember this can be viewed by anyone on the internet and could also encourage/discourage players to join based on the content. Try to stay away from real world controversy, We have mentioned some controversial things before such as admins being removed, arguements that happened but these were fairly trivial matters and everyones name was left out of it. Never name/shame anyone on the timeline, never name individuals in general, naming groups is ok as long as the group name is appropriate. imgSrc, A link to the image in public/ if there is one. Format: /S20Ships.png There needs to be a matching image in public/ with this name, remember the image guidelines. iframeSrc, A link to a video or a mod list if there is one. Format for modlist is shown above, For a video use the entire url to wherever that video is hosted E.g. YouTube.","title":"TODO Apply Standards and make sure file name is consistent with nav"},{"location":"Website/#todo-apply-standards-and-make-sure-file-name-is-consistent-with-nav","text":"","title":"TODO Apply Standards and make sure file name is consistent with nav"},{"location":"Website/#website-guide","text":"This documents aims to provide a guide for updating an maintaining the website.","title":"Website Guide"},{"location":"Website/#website-link","text":"https://grimwald.vercel.app","title":"Website Link"},{"location":"Website/#new-seasons","text":"","title":"New Seasons"},{"location":"Website/#updating-the-main-site-for-a-new-season","text":"Here are the steps for updating the website for the new season. First go to app/page.tsx, You will see something similar to the following code <> <Navbar /> <Hero /> <div className=\"parallax\"></div> <h2 id=\"subtitle\">Season 21</h2> <Timer startText=\"Season Started: 8th of February 2025\" startTimestamp={1739031120} /> <h2 id=\"subtitle\">Server Lifetime</h2> <Timer startText=\"Server Started: 14th of September 2020\" startTimestamp={1600095600} /> </> Change the season number on the subtitle. Change the date the season started on the line below, Keep it in the same format, Then put the date and time (Which can both be found from the season start announcement) that the season started into a unix timestamp converter (Such as this https://www.unixtimestamp.com ), Put the number it generates into the start timestamp field. Do not touch the bottom 2 lines these are for the server start date which will never change. Next you need to update the map link. Go to app/components/Navbar.js, Find the line like this: <NavButton href=\"http://127.0.0.1:1234/\" text=\"Map\" /> Change the url to the current map url. This will be the servers IP + the map webservers port, (Found in the additional ports section or in the map config)","title":"Updating the main site for a new season"},{"location":"Website/#the-timeline","text":"","title":"The Timeline"},{"location":"Website/#media-guidelines","text":"All images should be 1920x1080 resolution. With no shaders or resource packs applied. You can link to videos relating to the server, resource packs or shaders are allowed. You can also link to modlists for modded seasons. Modlists are generated by curseforge when you export a profile you will have to add this file to the public/modlists folder and name it correctly.","title":"Media guidelines"},{"location":"Website/#creating-a-new-season","text":"To add a new season to the timeline first go to app/components/seasons . Duplicate the most recent season file, changing the name of the duplicated file to reflect the season you are adding. E.g. season20 -> duplicate, rename -> season21 Firstly there are 3 values to update in this new file: export default function Season20() { return ( <div className=\"parallaxS20\"> <div id=\"S20\"></div> Change the function season number to reflect the season you are adding. (Season20 -> Season21) Do the same for the parallax class. (parallaxS20 -> parallaxS21) Finally do the same for the id. (S20 -> S21)","title":"Creating a new season"},{"location":"Website/#setting-up-the-background","text":"Now we need to set up the background image and styles to make the new timeline section look right: Go to app/globals.css . Go to the very bottom of the file and then scroll up a bit until you see the comment / Parallax stuff / You will see something like the following: .parallaxS1, .parallaxS2, .parallaxS3, .parallaxS4, .parallaxS5, .parallaxS6, .parallaxS7, .parallaxS8, .parallaxS9, .parallaxS10, .parallaxS11, .parallaxS12, .parallaxS13, .parallaxS14, .parallaxS15, .parallaxS16, .parallaxS17, .parallaxS18, .parallaxS19, .parallaxS20 { Add the parallax class of the season you are adding to this list by adding a comma after the most recent season but before the { and then writing the parallax class name. Scroll down a bit until you see a similar list and do the same thing. Finally scroll right to the bottom and copy the last 3 lines then paste them under. They should look like the following .parallaxS20 { background-image: url(\"/S20Background.png\"); } Once again change the class name to be that of the new season you are adding. Also change the name of the background-image url to reflect the new season you are adding. Now go into public/ and place the image you want to use for a background in here, It should be named S<season number>Background.png otherwise it will not work Now your background should work.","title":"Setting up the background"},{"location":"Website/#add-the-new-section","text":"To see everything is working we need to add this timeline section to the timeline page go to app/pages/timeline/page.tsx Copy and paste an import season line updating the season number in both positions for the new season you are adding. They look like this import Season20 from \"@/app/components/seasons/season20\"; Then do the same with the element. They look like this <Season20 /> Now your timeline is visible but will show the same content as the previous one with a new background.","title":"Add the new section"},{"location":"Website/#updating-the-content-and-general-guidelines","text":"Go back to the app/components/seasons directory and open your new seasons file. Here is a view of each timeline entry you can duplicate these or remove them to add/remove more entries. <Timeline side=\"left\" date=\"23rd October 2024\" title=\"Season 20 Begins\" description=\"Continuing our tradition of having a modded season every 4 seasons, We start season 20 with a custom modpack unfortunately we had to play on an older version due to some of the mods we were interested in not being up to date. (Mods: See list below)\" imgSrc=\"\" // If no img, pass an empty string or undefined iframeSrc=\"/modlists/S20Mods.html\" // If no iframe, pass an empty string or undefined /> side determines which side of the timeline the entry appears on, this should always be alternating meaning when you duplicate the file you will have to invert all left/right values. date, displays the date of an event, keep it in the same format, If date is completely unknown you can leave it blank, if you know the rough time you can write something like 'Early January 2025' or 'Some point during January 2025'. title, the title of the event, Should never be left blank description, a brief description of the event. Should never be left blank, Remember this can be viewed by anyone on the internet and could also encourage/discourage players to join based on the content. Try to stay away from real world controversy, We have mentioned some controversial things before such as admins being removed, arguements that happened but these were fairly trivial matters and everyones name was left out of it. Never name/shame anyone on the timeline, never name individuals in general, naming groups is ok as long as the group name is appropriate. imgSrc, A link to the image in public/ if there is one. Format: /S20Ships.png There needs to be a matching image in public/ with this name, remember the image guidelines. iframeSrc, A link to a video or a mod list if there is one. Format for modlist is shown above, For a video use the entire url to wherever that video is hosted E.g. YouTube.","title":"updating the content and general guidelines"},{"location":"World_Downloads/","text":"TODO Apply Standards and make sure file name is consistent with nav World Downloads This documents aims to provide a guide for downloading, formatting, backing up and distributing the world downloads. Downloading and Paper Dimensions Fix Download the world folder from the server. If you are playing on a paper server the format is different from regular worlds and you will also need to download world_nether and world_the_end When downloading everything will be in a compressed file, Extract this first, now make a copy in case anything goes wrong. If you were on a paper server you will now need to combine the 3 world folders in order to store the world in a format that can be understood by singleplayer. Rename world_nether to DIM-1 Rename world_the_end to DIM1 Move both of these into the world folder We did not know about this issue for a number of seasons hence why a lot of world downloads are missing the nether and end. Trimming the World Now you should trim the world to reduce the file size without deleting anything important. To do this you will need to download and install MCA Selector. https://github.com/Querz/mcaselector If you had to combine the dimensions you may wish to create another copy at this point to save you recombining them if anything goes wrong at this stage. Open MCA Selector and select file/open world select the world folder and choose select folder when prompted choose the overworld dimension. The world will start loading, ensure everything looks right. Select tools/filter chunks add the following query InhabitedTime < 5 minutes if it is not already there. Also ensure there are no other filter queries. Change the option at the bottom of this filter menu from Select to Delete and ensure Overwrite Selection is checked, All other fields can be left unchecked/blank. Click ok and the program will begin purging the chunks that have been inhabited for less than 5 minutes. This is useful as if you rendered the world for dynamap or all of the chunks would wihtin your set area will have been briefly loaded. It also clears areas players have loaded by just passing through them which can be a lot especially with elytra. You can go to file/open dimension and run the purge on the nether and end dimension too. Depending on the world size you may wish to change the amount of time in the filter. 5 minutes is usually good but it depends how much you are willing to lose/how big the world is. Once this is done ensure the world is recognised by the game by placing it in your saves folder. There is no need to load the world but if you do not make changes in it before publishing. (or create a copy so you can publish an unaltered other than trimmed version) Uploading the World You will need git installed and a github account for this, This guide will not tell you how to set this up or how to use git so you will have to go do that yourself and come back once done. Create a new public repository for the world using this name format Season-X-World replace X with the season number. (Ensure this is created on this github account Grimwald-SMP ) The repository description should be the same as the name without the dashes - . Add a README.md file to this repo and enter the following text and adapt it the season you are uploading. # Grimwald SMP Season (Season Number) World ## Requirements - Version 1.16.4(+/ONLY, Choose one) - No mods required ## Download and Installation Instructions - Click the green button near the top that says code - Click Download Zip - Wait for the download to complete then unzip into your minecraft saves folder (%appdata%/.minecraft/saves) If the season requires mods to be played it may look more like this to include a link to required mods, Note the version does not say only or +, just the version this is because it can be upgraded but it is recommended you just stay on the noted version as not all mods might be available in later versions: # Grimwald SMP Season 20 World ## Requirements - Version 1.19.2 - Mods Required: https://grimwald.vercel.app/modlists/S20Mods.html ## Download and Installation Instructions - Click the green button near the top that says code - Click Download Zip - Wait for the download to complete then unzip into your minecraft saves folder (%appdata%/.minecraft/saves) Clone this repo, Move the entire trimmed world folder into it and then commit and push to github. Now open https://github.com/Grimwald-SMP/Grimwald-SMP . Edit the table adding a new row for the season you just added, filling out the cells and linking the new repo. Once this is all done you should announce it to players and send a link.","title":"TODO Apply Standards and make sure file name is consistent with nav"},{"location":"World_Downloads/#todo-apply-standards-and-make-sure-file-name-is-consistent-with-nav","text":"","title":"TODO Apply Standards and make sure file name is consistent with nav"},{"location":"World_Downloads/#world-downloads","text":"This documents aims to provide a guide for downloading, formatting, backing up and distributing the world downloads.","title":"World Downloads"},{"location":"World_Downloads/#downloading-and-paper-dimensions-fix","text":"Download the world folder from the server. If you are playing on a paper server the format is different from regular worlds and you will also need to download world_nether and world_the_end When downloading everything will be in a compressed file, Extract this first, now make a copy in case anything goes wrong. If you were on a paper server you will now need to combine the 3 world folders in order to store the world in a format that can be understood by singleplayer. Rename world_nether to DIM-1 Rename world_the_end to DIM1 Move both of these into the world folder We did not know about this issue for a number of seasons hence why a lot of world downloads are missing the nether and end.","title":"Downloading and Paper Dimensions Fix"},{"location":"World_Downloads/#trimming-the-world","text":"Now you should trim the world to reduce the file size without deleting anything important. To do this you will need to download and install MCA Selector. https://github.com/Querz/mcaselector If you had to combine the dimensions you may wish to create another copy at this point to save you recombining them if anything goes wrong at this stage. Open MCA Selector and select file/open world select the world folder and choose select folder when prompted choose the overworld dimension. The world will start loading, ensure everything looks right. Select tools/filter chunks add the following query InhabitedTime < 5 minutes if it is not already there. Also ensure there are no other filter queries. Change the option at the bottom of this filter menu from Select to Delete and ensure Overwrite Selection is checked, All other fields can be left unchecked/blank. Click ok and the program will begin purging the chunks that have been inhabited for less than 5 minutes. This is useful as if you rendered the world for dynamap or all of the chunks would wihtin your set area will have been briefly loaded. It also clears areas players have loaded by just passing through them which can be a lot especially with elytra. You can go to file/open dimension and run the purge on the nether and end dimension too. Depending on the world size you may wish to change the amount of time in the filter. 5 minutes is usually good but it depends how much you are willing to lose/how big the world is. Once this is done ensure the world is recognised by the game by placing it in your saves folder. There is no need to load the world but if you do not make changes in it before publishing. (or create a copy so you can publish an unaltered other than trimmed version)","title":"Trimming the World"},{"location":"World_Downloads/#uploading-the-world","text":"You will need git installed and a github account for this, This guide will not tell you how to set this up or how to use git so you will have to go do that yourself and come back once done. Create a new public repository for the world using this name format Season-X-World replace X with the season number. (Ensure this is created on this github account Grimwald-SMP ) The repository description should be the same as the name without the dashes - . Add a README.md file to this repo and enter the following text and adapt it the season you are uploading. # Grimwald SMP Season (Season Number) World ## Requirements - Version 1.16.4(+/ONLY, Choose one) - No mods required ## Download and Installation Instructions - Click the green button near the top that says code - Click Download Zip - Wait for the download to complete then unzip into your minecraft saves folder (%appdata%/.minecraft/saves) If the season requires mods to be played it may look more like this to include a link to required mods, Note the version does not say only or +, just the version this is because it can be upgraded but it is recommended you just stay on the noted version as not all mods might be available in later versions: # Grimwald SMP Season 20 World ## Requirements - Version 1.19.2 - Mods Required: https://grimwald.vercel.app/modlists/S20Mods.html ## Download and Installation Instructions - Click the green button near the top that says code - Click Download Zip - Wait for the download to complete then unzip into your minecraft saves folder (%appdata%/.minecraft/saves) Clone this repo, Move the entire trimmed world folder into it and then commit and push to github. Now open https://github.com/Grimwald-SMP/Grimwald-SMP . Edit the table adding a new row for the season you just added, filling out the cells and linking the new repo. Once this is all done you should announce it to players and send a link.","title":"Uploading the World"},{"location":"contributing/","text":"\ud83d\udcdc Contributing Guidelines We welcome contributions from everyone in the Grimwald SMP community! Whether you\u2019re helping improve documentation, fixing typos, or adding new content, we appreciate your efforts. Please follow these guidelines to ensure consistency and quality across the knowledge base. 1. General Guidelines All contributions should align with the Grimwald Knowledge Base standards. Review the Documentation Standards before contributing. Contributions must be respectful and objective , adhering to the community\u2019s values. Do not mention players or staff members by their real or online names in any documentation or contributions. 2. Using GitHub for Contributions Grimwald's Knowledge Base is hosted on GitHub . To contribute, please follow these steps: A GitHub Account and having Git installed are necessary before continuing. Prior knowledge of GitHub and Git will be helpful but are not required. Forking the Repository Visit the Grimwald Knowledge Base repository on GitHub. Click on the Fork button in the top-right corner to create a copy of the repository under your GitHub account. Making Changes Clone your forked repository to your local machine: git clone https://github.com/Grimwald-SMP/grimwald-knowledge-base.git Navigate to the project directory: cd grimwald-knowledge-base Create a new branch for your changes: git checkout -b your-feature-branch Make the necessary changes in your local copy. Follow the Documentation Standards for formatting and writing guidelines. Test your changes locally (see section on MkDocs below). Submitting a Pull Request Once your changes are complete: Commit your changes: git add . git commit -m \"Description of changes made\" Push your branch to your forked respository: git push origin your-feature-branch Go to the GitHub Repostory and create a Pull Request (PR) from your branch to the main repositories develop branch. Ensure your PR: Includes edits to the changelog.md file explaining your changes. Adheres to the standards. Admins will review the PR, and after any necessary revisions, your changes will be merged into the main repository. 3. Working with MkDocs The Grimwald Knowledge Base is built using MkDocs . To view and preview your changes locally, follow these steps: Installing MkDocs If you haven't already you will need to install python on your machine. Download on Python.org If you haven't already installed MkDocs, you can do so by running: pip install mkdocs Running the Development Server To preview your changes locally, you need to run the development server: Navigate to your forked repository's root directory: cd grimwald-knowledge-base Start the MkDocs development server: mkdocs serve Visit http://127.0.0.1:8000 in your browser to preview the documentation. Building and deploying the Docs If you are an admin you will also need to know how to build and deploy the docs. You should build and deploy after every change to develop . If you are an admin and are the one making or the one who reviewed and accepted the changes you are responsible for doing this yourself. After merging the required changes from a PR into the develop branch, Run the following command to build the documentation into a static site: mkdocs build . Once this is complete merge develop into main . It will be automatically deployed GitHub Pages upon pushing the changes to main . Dealing with Merge Conflicts If there are merge conflicts: - Make sure you pull the latest changes from the main repostitory: git pull origin main - Resolve the conflicts and push the changes. 5. Additional Notes Please refrain from editing brand-related documents or documents relating to Grimwald's core identity and values unless you have been explicitly told to by an admin, If you are an admin you should make sure the owner(s) are ok with this change. This applies to major changes and not fixes such as correcting typos. Keep your pull requests small and focused on a single task or feature. This makes them easier to review and less prone to errors. Always test your changes locally to ensure everything is working as expected before submitting your PR. Bare in mind if you build the docs locally, they may not behave as expected when opening the html files as some features do not work until they are hosted on a server, Instead you should stick to viewing them on the development server. By following these guidelines, you ensure that Grimwald\u2019s Knowledge Base remains organized, up-to-date, and helpful to all users.","title":"\ud83d\udcdc Contributing"},{"location":"contributing/#contributing-guidelines","text":"We welcome contributions from everyone in the Grimwald SMP community! Whether you\u2019re helping improve documentation, fixing typos, or adding new content, we appreciate your efforts. Please follow these guidelines to ensure consistency and quality across the knowledge base.","title":"\ud83d\udcdc Contributing Guidelines"},{"location":"contributing/#1-general-guidelines","text":"All contributions should align with the Grimwald Knowledge Base standards. Review the Documentation Standards before contributing. Contributions must be respectful and objective , adhering to the community\u2019s values. Do not mention players or staff members by their real or online names in any documentation or contributions.","title":"1. General Guidelines"},{"location":"contributing/#2-using-github-for-contributions","text":"Grimwald's Knowledge Base is hosted on GitHub . To contribute, please follow these steps: A GitHub Account and having Git installed are necessary before continuing. Prior knowledge of GitHub and Git will be helpful but are not required.","title":"2. Using GitHub for Contributions"},{"location":"contributing/#forking-the-repository","text":"Visit the Grimwald Knowledge Base repository on GitHub. Click on the Fork button in the top-right corner to create a copy of the repository under your GitHub account.","title":"Forking the Repository"},{"location":"contributing/#making-changes","text":"Clone your forked repository to your local machine: git clone https://github.com/Grimwald-SMP/grimwald-knowledge-base.git Navigate to the project directory: cd grimwald-knowledge-base Create a new branch for your changes: git checkout -b your-feature-branch Make the necessary changes in your local copy. Follow the Documentation Standards for formatting and writing guidelines. Test your changes locally (see section on MkDocs below).","title":"Making Changes"},{"location":"contributing/#submitting-a-pull-request","text":"Once your changes are complete: Commit your changes: git add . git commit -m \"Description of changes made\" Push your branch to your forked respository: git push origin your-feature-branch Go to the GitHub Repostory and create a Pull Request (PR) from your branch to the main repositories develop branch. Ensure your PR: Includes edits to the changelog.md file explaining your changes. Adheres to the standards. Admins will review the PR, and after any necessary revisions, your changes will be merged into the main repository.","title":"Submitting a Pull Request"},{"location":"contributing/#3-working-with-mkdocs","text":"The Grimwald Knowledge Base is built using MkDocs . To view and preview your changes locally, follow these steps:","title":"3. Working with MkDocs"},{"location":"contributing/#installing-mkdocs","text":"If you haven't already you will need to install python on your machine. Download on Python.org If you haven't already installed MkDocs, you can do so by running: pip install mkdocs","title":"Installing MkDocs"},{"location":"contributing/#running-the-development-server","text":"To preview your changes locally, you need to run the development server: Navigate to your forked repository's root directory: cd grimwald-knowledge-base Start the MkDocs development server: mkdocs serve Visit http://127.0.0.1:8000 in your browser to preview the documentation.","title":"Running the Development Server"},{"location":"contributing/#building-and-deploying-the-docs","text":"If you are an admin you will also need to know how to build and deploy the docs. You should build and deploy after every change to develop . If you are an admin and are the one making or the one who reviewed and accepted the changes you are responsible for doing this yourself. After merging the required changes from a PR into the develop branch, Run the following command to build the documentation into a static site: mkdocs build . Once this is complete merge develop into main . It will be automatically deployed GitHub Pages upon pushing the changes to main .","title":"Building and deploying the Docs"},{"location":"contributing/#dealing-with-merge-conflicts","text":"If there are merge conflicts: - Make sure you pull the latest changes from the main repostitory: git pull origin main - Resolve the conflicts and push the changes.","title":"Dealing with Merge Conflicts"},{"location":"contributing/#5-additional-notes","text":"Please refrain from editing brand-related documents or documents relating to Grimwald's core identity and values unless you have been explicitly told to by an admin, If you are an admin you should make sure the owner(s) are ok with this change. This applies to major changes and not fixes such as correcting typos. Keep your pull requests small and focused on a single task or feature. This makes them easier to review and less prone to errors. Always test your changes locally to ensure everything is working as expected before submitting your PR. Bare in mind if you build the docs locally, they may not behave as expected when opening the html files as some features do not work until they are hosted on a server, Instead you should stick to viewing them on the development server. By following these guidelines, you ensure that Grimwald\u2019s Knowledge Base remains organized, up-to-date, and helpful to all users.","title":"5. Additional Notes"},{"location":"standards/","text":"\ud83d\udcdc Documentation Standards This document outlines the standards and guidelines for creating and maintaining content within the Grimwald Knowledge Base . By adhering to these standards, we ensure the information remains consistent, accessible, and clear for everyone who uses it. Whether you\u2019re adding new content, updating existing documents, or contributing to the knowledge base in any way, these standards should be followed to maintain quality and usability. 1. Writing Style Clarity & Simplicity Write in clear, concise language . Avoid jargon or overly complex sentences. Ensure that each section is easy to understand for both new and experienced players. Ensure correct punctuation is used. Tone & Voice Maintain a neutral and professional tone throughout the documentation. While we encourage an engaging voice, avoid being overly casual. Focus on maintaining an informative and helpful tone. Avoid humor or informal language unless appropriate for specific contexts. Consistency Use consistent terminology across all documents. For example, if referring to players with certain roles (e.g., \"Admins,\" \"Moderators\"), make sure the same terms are used everywhere. For technical terms, provide definitions or explanations if they are not common knowledge (e.g., \"plugins,\" \"datapacks\"). Abbreviations and acronyms should be spelled out the first time they appear, followed by the abbreviation in parentheses (e.g., \"Staff Member (SM)\"). Use active voice whenever possible (e.g., \"Players must follow these rules,\" not \"These rules must be followed by players\"). 2. Document Structure Headings & Subheadings Use clear, hierarchical headings and subheadings to break up large blocks of text and improve readability. Example structure: # Main Heading (for major sections) ## Subheading (for secondary sections) Avoid using other levels of heading. Numbered & Bulleted Lists Use bulleted lists for unordered information and numbered lists for step-by-step instructions or when order matters. Lists should be simple and to the point, with each bullet or number point containing a single idea. Formatting Use bold for important terms, commands, or concepts that need emphasis (e.g., /ban ). Use italics for examples or to highlight less important details (e.g., note ). Code snippets (commands, config examples) should be wrapped in backticks to enclosed them in code blocks. Avoid using excessive caps or underlining. Links Use internal links for cross-references to other parts of the knowledge base (e.g., see the Contributing Guidelines ). External links should open in a new tab and should be relevant to Grimwald, such as linking to resources or tools directly used on the server. Use clear link text that describes the destination (e.g., \u201cClick here for the economy setup guide\u201d instead of \u201cclick here\u201d). 3. Content Guidelines Accuracy & Up-to-Date Information Only accurate, verified information should be included in the knowledge base. Always check that any changes to the server, rules, or guidelines are reflected in the documentation. If you're unsure of a specific detail, check with the relevant staff member or consult other sources before publishing or submitting for review. Completeness Each document should cover the subject comprehensively . Ensure that all aspects of the topic are explained, including potential FAQs or common issues. If necessary, include step-by-step instructions , examples , and troubleshooting tips for clarity. Objectivity Maintain an objective point of view when discussing issues such as player reports, rule enforcement, or conflict resolution. Avoid personal opinions or biased language. Avoid sentitive topics, real world drama or anything that could be damaging to the brand. see the Brand Guidelines . Do not mention players or members of staff by their real or online names anywhere in these documents. Community Input All major changes or new sections should be reviewed by staff before being finalized. Encourage players to provide feedback on documents that are unclear or incomplete. 4. Updating the Knowledge Base Review Process Staff members should periodically review documentation for accuracy and clarity. Changelog entries should be included whenever a significant change is made to a document. Version Control Maintain version control for all documents. 5. Accessibility Language & Localization Consider the global nature of Grimwald and avoid region-specific language or terms. All docs should be written in American English (E.g. localization instead of localisation, color instead of colour.) 6. AI Using AI To Adhere To Standards This document can be fed to AI alongside your new or changed document to ensure you are adhering to the standards. If you use AI, Please throughly review the AIs suggested changes before deciding if you should implement them.","title":"\ud83d\udcdc Standards"},{"location":"standards/#documentation-standards","text":"This document outlines the standards and guidelines for creating and maintaining content within the Grimwald Knowledge Base . By adhering to these standards, we ensure the information remains consistent, accessible, and clear for everyone who uses it. Whether you\u2019re adding new content, updating existing documents, or contributing to the knowledge base in any way, these standards should be followed to maintain quality and usability.","title":"\ud83d\udcdc Documentation Standards"},{"location":"standards/#1-writing-style","text":"","title":"1. Writing Style"},{"location":"standards/#clarity-simplicity","text":"Write in clear, concise language . Avoid jargon or overly complex sentences. Ensure that each section is easy to understand for both new and experienced players. Ensure correct punctuation is used.","title":"Clarity &amp; Simplicity"},{"location":"standards/#tone-voice","text":"Maintain a neutral and professional tone throughout the documentation. While we encourage an engaging voice, avoid being overly casual. Focus on maintaining an informative and helpful tone. Avoid humor or informal language unless appropriate for specific contexts.","title":"Tone &amp; Voice"},{"location":"standards/#consistency","text":"Use consistent terminology across all documents. For example, if referring to players with certain roles (e.g., \"Admins,\" \"Moderators\"), make sure the same terms are used everywhere. For technical terms, provide definitions or explanations if they are not common knowledge (e.g., \"plugins,\" \"datapacks\"). Abbreviations and acronyms should be spelled out the first time they appear, followed by the abbreviation in parentheses (e.g., \"Staff Member (SM)\"). Use active voice whenever possible (e.g., \"Players must follow these rules,\" not \"These rules must be followed by players\").","title":"Consistency"},{"location":"standards/#2-document-structure","text":"","title":"2. Document Structure"},{"location":"standards/#headings-subheadings","text":"Use clear, hierarchical headings and subheadings to break up large blocks of text and improve readability. Example structure: # Main Heading (for major sections) ## Subheading (for secondary sections) Avoid using other levels of heading.","title":"Headings &amp; Subheadings"},{"location":"standards/#numbered-bulleted-lists","text":"Use bulleted lists for unordered information and numbered lists for step-by-step instructions or when order matters. Lists should be simple and to the point, with each bullet or number point containing a single idea.","title":"Numbered &amp; Bulleted Lists"},{"location":"standards/#formatting","text":"Use bold for important terms, commands, or concepts that need emphasis (e.g., /ban ). Use italics for examples or to highlight less important details (e.g., note ). Code snippets (commands, config examples) should be wrapped in backticks to enclosed them in code blocks. Avoid using excessive caps or underlining.","title":"Formatting"},{"location":"standards/#links","text":"Use internal links for cross-references to other parts of the knowledge base (e.g., see the Contributing Guidelines ). External links should open in a new tab and should be relevant to Grimwald, such as linking to resources or tools directly used on the server. Use clear link text that describes the destination (e.g., \u201cClick here for the economy setup guide\u201d instead of \u201cclick here\u201d).","title":"Links"},{"location":"standards/#3-content-guidelines","text":"","title":"3. Content Guidelines"},{"location":"standards/#accuracy-up-to-date-information","text":"Only accurate, verified information should be included in the knowledge base. Always check that any changes to the server, rules, or guidelines are reflected in the documentation. If you're unsure of a specific detail, check with the relevant staff member or consult other sources before publishing or submitting for review.","title":"Accuracy &amp; Up-to-Date Information"},{"location":"standards/#completeness","text":"Each document should cover the subject comprehensively . Ensure that all aspects of the topic are explained, including potential FAQs or common issues. If necessary, include step-by-step instructions , examples , and troubleshooting tips for clarity.","title":"Completeness"},{"location":"standards/#objectivity","text":"Maintain an objective point of view when discussing issues such as player reports, rule enforcement, or conflict resolution. Avoid personal opinions or biased language. Avoid sentitive topics, real world drama or anything that could be damaging to the brand. see the Brand Guidelines . Do not mention players or members of staff by their real or online names anywhere in these documents.","title":"Objectivity"},{"location":"standards/#community-input","text":"All major changes or new sections should be reviewed by staff before being finalized. Encourage players to provide feedback on documents that are unclear or incomplete.","title":"Community Input"},{"location":"standards/#4-updating-the-knowledge-base","text":"","title":"4. Updating the Knowledge Base"},{"location":"standards/#review-process","text":"Staff members should periodically review documentation for accuracy and clarity. Changelog entries should be included whenever a significant change is made to a document.","title":"Review Process"},{"location":"standards/#version-control","text":"Maintain version control for all documents.","title":"Version Control"},{"location":"standards/#5-accessibility","text":"","title":"5. Accessibility"},{"location":"standards/#language-localization","text":"Consider the global nature of Grimwald and avoid region-specific language or terms. All docs should be written in American English (E.g. localization instead of localisation, color instead of colour.)","title":"Language &amp; Localization"},{"location":"standards/#6-ai","text":"","title":"6. AI"},{"location":"standards/#using-ai-to-adhere-to-standards","text":"This document can be fed to AI alongside your new or changed document to ensure you are adhering to the standards. If you use AI, Please throughly review the AIs suggested changes before deciding if you should implement them.","title":"Using AI To Adhere To Standards"}]}